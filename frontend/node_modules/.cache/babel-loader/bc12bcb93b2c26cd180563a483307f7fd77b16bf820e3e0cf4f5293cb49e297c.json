{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\HAPPY\\\\Downloads\\\\smart_resume_analyzer_full\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(\"\");\n  const handleFileChange = e => {\n    setFile(e.target.files[0]);\n    setError(\"\");\n    setResult(null);\n  };\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please upload a resume file.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"file\", file);\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        throw new Error(\"Failed to analyze resume. Make sure backend is running.\");\n      }\n      const data = await response.json();\n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n      setResult(null);\n    }\n  };\n  const handleDownloadPDF = () => {\n    if (!result) return;\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(\"Resume Analysis Report\", 14, 22);\n    doc.setFontSize(12);\n    doc.text(`Best Match Role: ${result.best_match.role}`, 14, 35);\n    doc.text(`Match Percentage: ${result.best_match.percentage}%`, 14, 42);\n    const tableRows = Object.entries(result.match_percentages).map(([role, percentage]) => [role, `${percentage}%`]);\n    doc.autoTable({\n      head: [[\"Role\", \"Match %\"]],\n      body: tableRows,\n      startY: 50,\n      theme: \"striped\"\n    });\n    doc.save(\"resume_analysis_report.pdf\");\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"Smart Resume Analyzer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      onChange: handleFileChange,\n      accept: \".pdf\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleUpload,\n      children: \"Analyze\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"error\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 17\n    }, this), result && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"results\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Match Percentages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.entries(result.match_percentages).map(([role, percent]) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            fontWeight: role === result.best_match.role ? \"bold\" : \"normal\",\n            color: role === result.best_match.role ? \"#2d66f3\" : \"black\"\n          },\n          children: [role, \": \", percent, \"%\"]\n        }, role, true, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"\\u2705 Best Fit Role: \", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"highlight\",\n          children: result.best_match.role\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 30\n        }, this), \" (\", result.best_match.percentage, \"%)\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleDownloadPDF,\n        children: \"Download PDF Report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"g50M/0W3czCwU5lrb4s3b370ssY=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsPDF","jsxDEV","_jsxDEV","App","_s","file","setFile","result","setResult","error","setError","handleFileChange","e","target","files","handleUpload","formData","FormData","append","response","fetch","method","body","ok","Error","data","json","err","message","handleDownloadPDF","doc","setFontSize","text","best_match","role","percentage","tableRows","Object","entries","match_percentages","map","autoTable","head","startY","theme","save","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","onChange","accept","onClick","percent","style","fontWeight","color","_c","$RefreshReg$"],"sources":["C:/Users/HAPPY/Downloads/smart_resume_analyzer_full/frontend/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\nimport \"./App.css\";\nimport jsPDF from \"jspdf\";\nimport \"jspdf-autotable\";\n\nfunction App() {\n  const [file, setFile] = useState(null);\n  const [result, setResult] = useState(null);\n  const [error, setError] = useState(\"\");\n\n  const handleFileChange = (e) => {\n    setFile(e.target.files[0]);\n    setError(\"\");\n    setResult(null);\n  };\n\n  const handleUpload = async () => {\n    if (!file) {\n      setError(\"Please upload a resume file.\");\n      return;\n    }\n\n    const formData = new FormData();\n    formData.append(\"file\", file);\n\n    try {\n      const response = await fetch(\"http://localhost:5000/analyze\", {\n        method: \"POST\",\n        body: formData,\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Failed to analyze resume. Make sure backend is running.\");\n      }\n\n      const data = await response.json();\n      setResult(data);\n    } catch (err) {\n      setError(err.message);\n      setResult(null);\n    }\n  };\n\n  const handleDownloadPDF = () => {\n    if (!result) return;\n\n    const doc = new jsPDF();\n    doc.setFontSize(18);\n    doc.text(\"Resume Analysis Report\", 14, 22);\n\n    doc.setFontSize(12);\n    doc.text(`Best Match Role: ${result.best_match.role}`, 14, 35);\n    doc.text(`Match Percentage: ${result.best_match.percentage}%`, 14, 42);\n\n    const tableRows = Object.entries(result.match_percentages).map(([role, percentage]) => [\n      role,\n      `${percentage}%`,\n    ]);\n\n    doc.autoTable({\n      head: [[\"Role\", \"Match %\"]],\n      body: tableRows,\n      startY: 50,\n      theme: \"striped\",\n    });\n\n    doc.save(\"resume_analysis_report.pdf\");\n  };\n\n  return (\n    <div className=\"App\">\n      <h1>Smart Resume Analyzer</h1>\n      <input type=\"file\" onChange={handleFileChange} accept=\".pdf\" />\n      <button onClick={handleUpload}>Analyze</button>\n      {error && <p className=\"error\">{error}</p>}\n\n      {result && (\n        <div className=\"results\">\n          <h2>Match Percentages:</h2>\n          <ul>\n            {Object.entries(result.match_percentages).map(([role, percent]) => (\n              <li\n                key={role}\n                style={{\n                  fontWeight:\n                    role === result.best_match.role ? \"bold\" : \"normal\",\n                  color: role === result.best_match.role ? \"#2d66f3\" : \"black\",\n                }}\n              >\n                {role}: {percent}%\n              </li>\n            ))}\n          </ul>\n          <h3>\n            âœ… Best Fit Role: <span className=\"highlight\">{result.best_match.role}</span> (\n            {result.best_match.percentage}%)\n          </h3>\n          <button onClick={handleDownloadPDF}>Download PDF Report</button>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}